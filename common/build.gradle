plugins {
	id 'convention.shared'
	alias libs.plugins.architectury.loom
	alias libs.plugins.mdg
}

modsDotGroovy.multiplatform.expose()

configurations {
	commonJava {
		canBeResolved = false
		canBeConsumed = true
	}
	commonResources {
		canBeResolved = false
		canBeConsumed = true
	}
}

loom {
	runConfigs.configureEach {
		ideConfigGenerated = false
	}
}

import net.fabricmc.loom.task.AbstractRemapJarTask
tasks.withType(AbstractRemapJarTask).each {
	it.targetNamespace = "named"
}

dependencies {
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${libs.versions.parchment.minecraft.get()}:${libs.versions.parchment.mappings.get()}@zip")
	}
	minecraft libs.minecraft
	modCompileOnly libs.fabric.loader
}

artifacts {
	commonJava sourceSets.main.java.sourceDirectories.singleFile
	commonResources sourceSets.main.resources.sourceDirectories.singleFile
}

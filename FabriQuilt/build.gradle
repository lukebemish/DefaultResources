plugins {
    id 'maven-publish'
}

apply plugin: 'org.quiltmc.loom'

repositories {

    maven {
        name 'Quilt (Release)'
        url 'https://maven.quiltmc.org/repository/release/'
    }

    maven {
        name 'Quilt (Snapshot)'
        url 'https://maven.quiltmc.org/repository/snapshot/'
        content {
            includeGroup 'org.quiltmc.fabric_api_qsl'
            includeGroupByRegex 'org\\.quiltmc\\.qsl(?:\\.[a-z_]+)?'
        }
    }
}

configurations {
    testCompileOnly.extendsFrom(compileOnly)
}

dependencies {
    minecraft libs.minecraft
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${libs.versions.parchment.minecraft.get()}:${libs.versions.parchment.mappings.get()}@zip")
    }
    modLocalRuntime libs.quilt.loader
    modCompileOnly libs.quilt.loader
    modLocalRuntime libs.qfapi
    modCompileOnly libs.qfapi

    compileOnly project(":Common")

    compileOnly libs.autoservice
    annotationProcessor libs.autoservice
}

loom {
    runs {
        client {
            client()
            setConfigName("Quilt Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Quilt Server")
            ideConfigGenerated(true)
            runDir("runserver")
        }
    }

    mixin {
        defaultRefmapName = "defaultresources.refmap.json"
    }
}

processResources {
    from project(":Common").sourceSets.main.resources
}

tasks.withType(JavaCompile).configureEach {
    source(project(":Common").sourceSets.main.allSource)
}

sourcesJar {
    from project(":Common").sourceSets.main.allSource
}

javadocJar {
    from project(":Common").sourceSets.main.allJava
}

jar {
    from("LICENSE") {
        rename { "${it}_${mod_name}" }
    }
}

tasks.jar.finalizedBy(tasks.remapJar)

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId base.archivesName.get()
        }
    }

    repositories {
    }
}
